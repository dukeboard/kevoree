#!/bin/sh
#

# PROVIDE: kevoree
# REQUIRE: DAEMON 
# REQUIRE: LOGIN
# REQUIRE: NETWORK
#
# KEYWORD: shutdown
#
# Configuration settings for kevoree in /etc/rc.conf:
#
# kevoree_enable (bool):
#   Set to "NO" by default.
#   Set it to "YES" to enable kevoree
#
# kevoree_home (str):
#   Default to "$HOME/kevoree-service"
#   Base kevoree directory
#
# 

. /etc/rc.subr

name="kevoree"
rcvar=`set_rcvar`
pidfile="/var/run/kevoree.pid"

load_rc_config "${name}"


: ${kevoree_enable="NO"}
: ${kevoree_home="$HOME/kevoree-service"}
: ${kevoree_version="RELEASE"}
: ${kevoree_log_level="INFO"}
: ${node_update_timeout="300000"}
: ${node_groupType="NanoRestGroup"}
: ${kevoree_node_bootstrap="mvn:org.kevoree.corelibrary.model/org.kevoree.library.model.javase/${kevoree_version}"}

#APP_PATH="$HOME/kevoree-service" # path where your exec file are
runtime="kevoree-runtime"  # name of the exec file without (.jar)
runtime_updater="kevoree-service-updater"

java="/usr/local/bin/java"
#java_args="-Dcom.sun.management.jmxremote.port=5555 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Xmx1024M -Xms1024M -Djava.awt.headless=true -Dnode.bootstrap=${kevoree_node_bootstrap} -Dkevoree.log.level=${kevoree_log_level} -Dnode.name=`/bin/hostname` -Dnode.log.appender=FILE -Dnode.log.appender.file=$kevoree_home/`/bin/hostname`.log -Dnode.groupType=${node_groupType} -Dnode.update.timeout=${node_update_timeout} -jar $kevoree_home/$runtime.jar"
java_args="-Xmx1024M -Xms1024M -Djava.awt.headless=true -Dnode.bootstrap=${kevoree_node_bootstrap} -Dkevoree.log.level=${kevoree_log_level} -Dnode.name=`/bin/hostname` -Dnode.log.appender=FILE -Dnode.log.appender.file=$kevoree_home/`/bin/hostname`.log -Dnode.groupType=${node_groupType} -Dnode.update.timeout=${node_update_timeout} -jar $kevoree_home/$runtime.jar"

command="/usr/sbin/daemon"
command_args="-f -p ${pidfile} ${java} ${java_args}"


start_precmd="pid_touch"
start_cmd="kevoree_start"
stop_cmd="kevoree_stop"
status_cmd="kevoree_status"

pid_touch() {
   touch ${pidfile}
}

kevoree_update() {
	$java -jar "$kevoree_home/$runtime_updater.jar" "$kevoree_home/$runtime.jar" model=${kevoree_node_bootstrap}
}

kevoree_start() {
	echo "Updating $name."
	kevoree_update
    echo "Starting $name."
    echo ${command} ${command_args}
    exec ${command} ${command_args}

#	exec "$JAVA ${java_command} ${redirection_command}"
#	/bin/sleep 5
#	$echo `$ps axw | $grep -e "${java_command}" | $grep -v tcsh` 
#	$echo `$ps axw | $grep -e "${java_command}" | $grep -v tcsh | $grep -v "$grep" | $cut -c1-6 | $sed "s/ //g"` > ${pidfile}
}

kevoree_stop() {
    rc_pid=$(kevoree_check_pidfile ${pidfile})

    if [ -z "${rc_pid}" ]; then
        [ -n "${rc_fast}" ] && return 0
        echo "${name} not running? (check ${pidfile})."
        return 1
    fi

    echo "Stopping ${name}."
    kill -TERM ${rc_pid} 2> /dev/null && echo "Killed."
    rm -f ${pidfile}
}

kevoree_status() {
    rc_pid=$(kevoree_check_pidfile $pidfile)

    if [ -n "${rc_pid}" ]; then
        echo "${name} is running as pid ${rc_pid}."
    else
        echo "${name} is not running."
        return 1
    fi
}

kevoree_check_pidfile() {
    _pidfile=$1
    if [ -z "${_pidfile}" ]; then
        err 3 'USAGE: kevoree_check_pidfile pidfile'
    fi
    if [ ! -f ${_pidfile} ]; then
        debug "pid file (${_pidfile}): not readable."
        return
    fi
	_pid=`cat ${_pidfile}`
    if [ -n "`/usr/local/bin/jps -l | grep -e ${_pid}`" ]; then
        echo -n ${_pid}
    fi
}

run_rc_command "$1"

