/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kevoree.tools.model2code

import org.kevoree.{KevoreeFactory, ContainerRoot}
import java.net.URI
import java.io.{PrintWriter, File}

/**
 * Created by IntelliJ IDEA.
 * User: gnain
 * Date: 09/12/11
 * Time: 16:07
 * To change this template use File | Settings | File Templates.
 */

object GenerationTest extends App {


  private def generateModel(nbDu: Int, nbCtInDu: Int, typesName: String): ContainerRoot = {
    val model = KevoreeFactory.createContainerRoot

    for (i <- 0 to nbDu) {

      val du = KevoreeFactory.createDeployUnit
      du.setGroupName("org.entimid.genlib")
      du.setUnitName("org.entimid.genlib." + typesName + i)
      du.setVersion("1.0.0-SNAPSHOT")
      model.addDeployUnits(du)

      for (j <- 0 to nbCtInDu) {

        val ct = KevoreeFactory.createComponentType
        ct.setBean("org.entimid.genlib.lib"+i+"." + typesName + i + "" + j)
        ct.setName(typesName + i + "" + j)
        ct.addDeployUnits(du)
        model.addTypeDefinitions(ct)

      }
    }

    model
  }


  private def generateMasterPom(model: ContainerRoot) {
    val masterPomFolder = new File(URI.create("file:/Users/gnain/sources/entimid/entimid-library/genlibs/org.entimid.genlib.root"))
    if (!masterPomFolder.exists())
      masterPomFolder.mkdirs()

    val deployUnit = KevoreeFactory.createDeployUnit
    deployUnit.setGroupName("org.entimid.genlib")
    deployUnit.setUnitName("org.entimid.genlib.root")
    deployUnit.setVersion("1.0.0-SNAPSHOT")

    val pr = new PrintWriter(new File(URI.create("file:/Users/gnain/sources/entimid/entimid-library/genlibs/org.entimid.genlib.root/pom.xml")), "utf-8")
    pr.println("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">")
    pr.println("");
    pr.println("  <modelVersion>4.0.0</modelVersion>")
    pr.println("  <groupId>" + deployUnit.getGroupName + "</groupId>")
    pr.println("  <artifactId>" + deployUnit.getUnitName + "</artifactId>")
    pr.println("  <version>" + deployUnit.getVersion + "</version>")
    pr.println("  <name>" + deployUnit.getUnitName + " Generated by Kevoree</name>")
    pr.println("  <packaging>pom</packaging>")
    pr.println("")
    pr.println("  <modules>")
    model.getDeployUnits.foreach {
      du =>
        pr.println("    <module>../" + du.getUnitName + "</module>")
    }
    pr.println("  </modules>")
    pr.println("")
    pr.println("</project>")
    pr.flush
    pr.close
  }

  val generator = new Model2Code
  val model = generateModel(5, 350, "TestComponent")
  model.getDeployUnits.foreach {
    du => generator.modelToDeployUnit(model, URI.create("file:/Users/gnain/sources/entimid/entimid-library/genlibs/" + du.getUnitName), du)
  }
  generateMasterPom(model)

}