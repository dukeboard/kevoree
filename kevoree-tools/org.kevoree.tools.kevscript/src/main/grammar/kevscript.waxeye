# KevScript grammar

# Rules
# =====
KevScript   <- +(Statement ws)

Statement   <- (Add | Remove | Move | Attach | Detach | Set | AddBinding | Merge | Network) ws

Add         <- AddToken ws String ws :':' ws String                                     # add node0 : JavaSENode
             | AddToken ws NameList ws :':' ws String                                   # add node42, node1 : JavascriptNode

Remove      <- RemoveToken ws String                                                    # remove node0
                                                                                        # remove comp1
             | RemoveToken ws NameList ws :':' ws String                                # remove chan1, node0

Move        <- MoveToken ws String ws String                                            # move comp1 node0
             | MoveToken ws NameList ws String                                          # move comp0, comp1 node1
             | MoveToken ws '*' ?(:'@' String) ws String                                # move * node0
                                                                                        # move *@node2 node1

Attach      <- AttachToken ws String ws String                                          # attach node0 group0
             | AttachToken ws NameList ws String                                        # attach node0, node1 group0
             | AttachToken ws '*' ws String                                             # attach * group2

Detach      <- DetachToken ws String ws String                                          # detach node0 group0
             | DetachToken ws NameList ws String                                        # detach node0, node1 group0
             | DetachToken ws '*' ws String                                             # detach * group42

Set         <- SetToken ws String ws Dictionary                                         # set comp0 {}

Network     <- NetworkToken ws String ws String                                         # network node1 192.168.0.1

Dictionary  <- :'{' ws AttrList ws :'}'                                                 # { Attribute, Attribute, ... }

AttrList    <- Attribute ws *(:[,] ws String)                                           # Attribute, Attribute, Attribute, ...

Attribute   <- String ws :'=' ws ['] ws String ws [']                                   # myAttr = 'foo'
             | String ws :'=' ws ["] ws String ws ["]                                   # myOtherAttr = "bar"

AddBinding  <- String :'.' String ws :'=>' ws String                                    # comp0.sendMsg => chan42

Merge       <- MergeToken ws String :':' String2                                        # merge npm:kevoree-chan-websocket
                                                                                        # merge mvn:org.kevoree.library.javase:websocketgrp:2.0.5-SNAPSHOT

NameList    <- String ws *(:[,] ws String)                                              # node0, node42, node1024
# =========
# End Rules


# Void Non-terminals
# =============
MergeToken      <: 'merge'
AddToken        <: 'add'
RemoveToken     <: 'remove'
MoveToken       <: 'move'
SetToken        <: 'set'
AttachToken     <: 'attach'
DetachToken     <: 'detach'
NetworkToken    <: 'network'
String          <- +[a-zA-Z0-9_-]
String2         <- +[a-zA-Z0-9.:@_-]
eol             <: '\r\n' | '\n' | '\r'
ws              <: *([ \t] | eol)
# =================
# End Void Non-terminals